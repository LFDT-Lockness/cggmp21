name: Rust

on:
  push:
    branches: [ "m" ]
  pull_request:
    branches: [ "*" ]

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: ${{ secrets.PAILLIER_ZK }}
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Build
      run: cargo build --release --all-features
    - uses: actions/upload-artifact@v3
      with:
        name: benchmark-tool
        path: target/release/measure_perf
  # Checks each library without default features
  bare_check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
        - key-share
        - cggmp21-keygen
        - cggmp21
    steps:
    - uses: actions/checkout@v3
    - uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: ${{ secrets.PAILLIER_ZK }}
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Build
      run: cargo check --no-default-features -p ${{ matrix.package }}
  build-wasm-nostd:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: ${{ secrets.PAILLIER_ZK }}
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Install wasm32-unknown-unknown toolchain
      run: rustup target add wasm32-unknown-unknown
    - name: Build on wasm32-unknown-unknown (no_std)
      run:
        (cd wasm/no_std && cargo build --target wasm32-unknown-unknown)

  # Run tests without HD wallets support
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: ${{ secrets.PAILLIER_ZK }}
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Run tests
      run: cargo test -r
  # Run tests including HD wallets support
  test-hd:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: ${{ secrets.PAILLIER_ZK }}
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Run tests
      run: cargo test -r --all-features

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Check formatting
      run: cargo fmt --all -- --check
  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: ${{ secrets.PAILLIER_ZK }}
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Run clippy
      run: cargo clippy --all --all-features --lib --exclude cggmp21-tests -- --no-deps -D clippy::all -D clippy::unwrap_used -D clippy::expect_used
    - name: Run clippy tests
      run: cargo clippy --tests --all-features --lib -- -D clippy::all

  check-doc:
    runs-on: ubuntu-latest
    steps:
    - uses: dtolnay/rust-toolchain@nightly
    - uses: actions/checkout@v3
    - uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: ${{ secrets.PAILLIER_ZK }}
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Check docs
      run: RUSTDOCFLAGS="--cfg docsrs -D warnings" cargo +nightly doc --workspace --all-features --no-deps

  bench:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    needs: build
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: benchmark-tool
    - name: Set file permissions
      run: chmod +x ./measure_perf
    - name: Run benchmarks
      run: |
        ./measure_perf -n 3 --no-bench-primes-gen > perf_output
        sed -e '/PERF_OUTPUT/{r perf_output' -e 'd}' .github/pr-comment.tpl > pr-comment
    - name: Leave PR comment
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: bench
        path: pr-comment

  check-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
        - key-share
        - cggmp21-keygen
        - cggmp21
    steps:
    - uses: actions/checkout@v3
    - uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: ${{ secrets.PAILLIER_ZK }}
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Dry-run publish
      run: cargo publish --dry-run -p ${{ matrix.package }}
